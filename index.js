const express = require('express');
const path = require('path');

const app = express();
const port = 3000;

// –°–∫–∞–∑–∞—Ç—å Express'—É, –≥–¥–µ –ª–µ–∂–∞—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('public'));
// –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å HTML-—Ñ–∞–π–ª –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ: http://localhost:${port}`);
});
app.get('/eco-tip', (req, res) => {
  res.send(`'–í–æ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –¥–Ω—è: –≤—ã–∫–ª—é—á–∞–π —Å–≤–µ—Ç, –∫–æ–≥–¥–∞ –≤—ã—Ö–æ–¥–∏—à—å üåç');
});
    <h1>–°–æ–≤–µ—Ç –¥–Ω—è üå±</h1>
    <p>–ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–π –æ–∫—É—Ä–∫–∏ –Ω–∞ –∑–µ–º–ª—é ‚Äî –ó–µ–º–ª—è –ø–æ–º–Ω–∏—Ç –≤—Å—ë üåçüö≠</p>
    <a href="/">–ù–∞–∑–∞–¥</a>
  `);
});
// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø—É—Ç–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ö–û–†–ù–Ø —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è) ---
const LEAF_IMAGES = [
  "./images/leaf_heart.png",
  "./images/leaf_tomato.png",
  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ...
];

// –ü–æ–¥–≥—Ä—É–∑–∏–º –∏—Ö, —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ ¬´–ø—É—Å—Ç–∞—è¬ª
LEAF_IMAGES.forEach(src => { const i = new Image(); i.src = src; });

// –°—á–µ—Ç—á–∏–∫ –∏ —Ñ—Ä–∞–∑–æ—á–∫–∏
let count = 0;
const quotes = [
  "–ö–∞–∂–¥—ã–π –ª–∏—Å—Ç —à–µ–ø—á–µ—Ç —Ç–µ–±–µ —Å–ø–∞—Å–∏–±–æ üåø",
  "–¢—ã ‚Äî —á–∞—Å—Ç—å –≤–µ–ª–∏–∫–æ–≥–æ –ª–µ—Å–∞ üçÉ",
  "–ü—Ä–∏—Ä–æ–¥–∞ —á—É–≤—Å—Ç–≤—É–µ—Ç —Ç–≤–æ—é –∑–∞–±–æ—Ç—É üíö",
  "–ú–∏—Ä —Å—Ç–∞–ª —á—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ üåû",
  "–¢–≤–æ–∏ —Ä—É–∫–∏ —Ç–≤–æ—Ä—è—Ç –¥–æ–±—Ä–æ üåç",
];

function setCounterAndQuote() {
  count++;
  document.getElementById("counter").textContent =
    `–¢—ã —É–∂–µ —Å–¥–µ–ª–∞–ª ${count} –¥–æ–±—Ä—ã—Ö –¥–µ–ª üíö`;
  const q = quotes[Math.floor(Math.random() * quotes.length)];
  document.getElementById("quote").textContent = q;
}

// –õ–∏—Å—Ç–æ–∫
function spawnLeaf() {
  const layer = document.getElementById("leaf-layer");
  const img = document.createElement("img");
  img.className = "leaf";
  img.src = LEAF_IMAGES[Math.floor(Math.random() * LEAF_IMAGES.length)];
  img.alt = "leaf";

  const startX = Math.random() * 100;            // vw
  const size   = 18 + Math.random() * 36;        // px
  const dur    = 2600 + Math.random() * 2200;    // ms
  const sway   = 1400 + Math.random() * 1200;    // ms
  const dx     = (Math.random() * 200 - 100) + "px";
  const rot    = (Math.random() * 360 * (Math.random()<.5?-1:1)) + "deg";
  const rA     = (Math.random() * 8 - 4) + "deg";
  const rB     = (Math.random() * 8 - 4) + "deg";
  const delay  = Math.random() * 250;

  img.style.left = `calc(${startX}vw - ${size/2}px)`;
  img.style.height = size + "px";
  img.style.setProperty("--dur",  dur + "ms");
  img.style.setProperty("--sway", sway + "ms");
  img.style.setProperty("--dx",   dx);
  img.style.setProperty("--rot",  rot);
  img.style.setProperty("--rA",   rA);
  img.style.setProperty("--rB",   rB);
  img.style.animationDelay = delay + "ms";

  layer.appendChild(img);
  setTimeout(() => img.remove(), dur + 1400 + delay);
}

// –ú—è–≥–∫–∏–π –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–æ—Ç–æ–∫
function startAmbient() {
  setInterval(() => { for (let i=0;i<3;i++) spawnLeaf(); }, 2200);
  setInterval(spawnLeaf, 900);
}

// ¬´–ó–∞–ª–ø¬ª –ø—Ä–∏ –∫–ª–∏–∫–µ
function burst(n=24){ for(let i=0;i<n;i++) setTimeout(spawnLeaf, i*60); }

// –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
window.addEventListener("DOMContentLoaded", () => {
  startAmbient();
  document.getElementById("helpBtn").addEventListener("click", () => {
    setCounterAndQuote();
    burst(30);
  });
});
